from datetime import date, datetime
from typing import Any, Optional, Union
from xml.sax import ContentHandler

def rfc2822_date(date: date) -> str: ...
def rfc3339_date(date: date) -> str: ...
def get_tag_uri(url: str, date: Optional[date]) -> str: ...

class SyndicationFeed:
    feed: dict[str, Any] = ...
    items: list[dict[str, Any]] = ...
    def __init__(
        self,
        title: str,
        link: str,
        description: Optional[str],
        language: Optional[str] = ...,
        author_email: Optional[str] = ...,
        author_name: Optional[str] = ...,
        author_link: Optional[str] = ...,
        subtitle: Optional[str] = ...,
        categories: Optional[tuple[str, str]] = ...,
        feed_url: Optional[str] = ...,
        feed_copyright: Optional[str] = ...,
        feed_guid: Optional[str] = ...,
        ttl: Optional[int] = ...,
        **kwargs: Any
    ) -> None: ...
    def add_item(
        self,
        title: str,
        link: str,
        description: str,
        author_email: Optional[str] = ...,
        author_name: Optional[str] = ...,
        author_link: Optional[str] = ...,
        pubdate: Optional[datetime] = ...,
        comments: None = ...,
        unique_id: Optional[str] = ...,
        unique_id_is_permalink: Optional[bool] = ...,
        categories: Optional[tuple[Any, ...]] = ...,
        item_copyright: Optional[str] = ...,
        ttl: None = ...,
        updateddate: Optional[datetime] = ...,
        enclosures: Optional[list[Enclosure]] = ...,
        **kwargs: Any
    ) -> None: ...
    def num_items(self) -> Any: ...
    def root_attributes(self) -> dict[Any, Any]: ...
    def add_root_elements(self, handler: ContentHandler) -> None: ...
    def item_attributes(self, item: dict[str, Any]) -> dict[Any, Any]: ...
    def add_item_elements(
        self, handler: ContentHandler, item: dict[str, Any]
    ) -> None: ...
    def write(self, outfile: Any, encoding: Any) -> None: ...
    def writeString(self, encoding: str) -> str: ...
    def latest_post_date(self) -> datetime: ...

class Enclosure:
    length: Any
    mime_type: str
    url: str = ...
    def __init__(self, url: str, length: Union[int, str], mime_type: str) -> None: ...

class RssFeed(SyndicationFeed):
    content_type: str = ...
    def write_items(self, handler: ContentHandler) -> None: ...
    def endChannelElement(self, handler: ContentHandler) -> None: ...

class RssUserland091Feed(RssFeed): ...
class Rss201rev2Feed(RssFeed): ...

class Atom1Feed(SyndicationFeed):
    content_type: str = ...
    ns: str = ...
    def write_items(self, handler: ContentHandler) -> None: ...

DefaultFeed = Rss201rev2Feed
